/*
 * ps7-7.cpp
 *
 *  Created on: Oct 26, 2016
 *      Author: adair
 */

#include <stdlib.h>
#include <stdio.h>
#include <iostream>
#include <string>
#include <sstream>
#include <vector>


long mod_exponentiation(long x, long y, long N){
	if(y == 0){
		return 1;
	}
	else{
		long z = mod_exponentiation(x,y/2,N);
		if((y & 0x1) == 0){
			return (z*z)%N;
		}
		else{
			return (x*(z*z))%N;
		}
	}
}

long greatest_common_divisor(long a, long b){
	if(b == 0){
		return a;
	}
	else{
		return greatest_common_divisor(b, a % b);
	}
}

/*
 * x and y are for
 */
long extended_euclids(long a, long b, long* x, long* y){
	//long* result = new long[3];
	if(b == 0){
		*x = 1;
		*y = 0;
		return a;
	}
	else{
		long xPrime,yPrime = 0;
		long d = extended_euclids(b,a%b,&xPrime,&yPrime);
		*x = yPrime;
		*y = (xPrime - (a/b)*yPrime);
		return d;
	}
}


int main(int argc, char** argv){
	std::string command;
	while(std::getline(std::cin,command)){
		std::stringstream ss(command);
		std::string toke;
		std::vector<std::string> command_strings;
		while(getline(ss,toke,' ')){
			command_strings.push_back(toke);
		}
		for(unsigned int i = 0; i < command_strings.size(); i ++){
			std::cout << command_strings[i] <<  " ";
		}
		std::cout << "\n";
		if(string::compare(command_strings[0],"isPrime") == 0){

		}
	}
	//long gcd = greatest_common_divisor(0,0);
	return 0;
}

